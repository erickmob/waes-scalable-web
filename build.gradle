plugins {
	id 'java'
	id 'idea'
	id 'jacoco'
	id 'org.sonarqube' version '2.8'
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'com.diffplug.gradle.spotless' version '3.18.0'
	id 'org.unbroken-dome.test-sets' version '2.1.1'
	id 'com.palantir.docker' version '0.22.1'
}

group = 'com.waes.diff.api'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.BUILD-SNAPSHOT")
}

test {
	useJUnitPlatform()
}

testSets {
	integrationTest {
		dirName = 'integration-test'
	}
}

dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'org.bitbucket.cowwoc:diff-match-patch:1.2'
	implementation 'org.apache.commons:commons-text:1.8'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		exclude group: 'junit', module: 'junit' //by both name and group
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.2.0"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.2.0"
	testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'	
	testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'

	integrationTestImplementation sourceSets.test.output
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

spotless {
	java {
		googleJavaFormat()
		licenseHeaderFile rootProject.file('src/spotless/apache-2.0.java')
	}
}

sonarqube {
	properties {
		property 'sonar.coverage.exclusions','**/WaesDiffApiApplication**,**/v1/api/domain/json/**,**/v1/api/domain/enums/**,**/v1/api/filter/**,**/v1/api/repository/entity/**'
	}
}

jacocoTestCoverageVerification {
    afterEvaluate {
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(dir: it, exclude:[
					'**/WaesDiffApiApplication**',
					'**/v1/api/domain/enums/*',
					'**/v1/api/domain/json/*',
					'**/v1/api/domain/*',
					'**/v1/api/filter/*',
					'**/v1/api/repository/entity/*',
			])
		})
    }

    violationRules {
        rule {
			element = 'CLASS'
            limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['com.waes.diff.v1.api.*']
			excludes = ['com.waes.diff.v1.api.WaesDiffApiApplication**']
            limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("gradle_build/dependency")
}

docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

check.dependsOn integrationTest
integrationTest.finalizedBy jacocoTestCoverageVerification
