plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'idea'
	id 'jacoco'
	id 'org.sonarqube' version '2.8'
	id 'com.diffplug.gradle.spotless' version '3.18.0'
	id 'org.unbroken-dome.test-sets' version '2.1.1'
	id 'com.palantir.docker' version '0.22.1'
}

group = 'com.waes.diff.api'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

springBoot {
	mainClassName = "com.waes.diff.v1.api.ApiApplication"
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.M3")
}

testSets {
	integrationTest {
		dirName = 'integration-test'
	}
}

dependencies {
	// spring boot and cloud
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// swagger 
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	// bitbucket 
	implementation 'org.bitbucket.cowwoc:diff-match-patch:1.2'
	implementation 'org.apache.commons:commons-text:1.8'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// annotation processors
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	// test
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		exclude group: 'junit', module: 'junit' //by both name and group
	}
	testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'
	runtimeOnly 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
	integrationTestImplementation sourceSets.test.output
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

spotless {
	java {
		googleJavaFormat()
		licenseHeaderFile rootProject.file('src/spotless/apache-2.0.java')
	}
}

sonarqube {
	properties {
		property 'sonar.coverage.exclusions','**/ApiApplication**,**/v1/api/domain/request/**,**/v1/api/domain/enums/**,**/v1/api/filter/**,**/v1/api/repository/entity/**'
	}
}

jacocoTestCoverageVerification {
    afterEvaluate {
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(dir: it, exclude:[
					'**/ApiApplication**',
					'**/v1/api/domain/enums/*',
					'**/v1/api/domain/request/*',
					'**/v1/api/domain/exception/*',
					'**/v1/api/filter/*',
					'**/v1/api/repository/entity/*',
			])
		})
    }

    violationRules {
        rule {
			element = 'CLASS'
			excludes = ['com.waes.diff.v1.api.ApiApplication**','**/v1/api/**/exception/*']
            limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }
    }
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("gradle_build/dependency")
}

task copySpringBootstrap(type: Copy){
	from('src/docker/spring')
	into("gradle_build/dependency/spring")
}

docker {
    name "${hubDockeRepo}/${bootJar.baseName}:${project.getVersion()}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
	copySpec.from(tasks.copySpringBootstrap.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

check.dependsOn integrationTest
integrationTest.finalizedBy jacocoTestCoverageVerification
